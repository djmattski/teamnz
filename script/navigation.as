package script {		import com.greensock.TweenLite;	import com.greensock.easing.*;		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Matrix;	import flash.utils.getDefinitionByName;		import script.model.Model;		public class navigation extends MovieClip	{			private var currSecName:String;		private var navAltered:Boolean;		private var my_dispatch:customDispatcher;		public var navYDelta:int;				public function navigation()		{			var navElements:Array = [				teamLinkText,				teamLinkNum,				historyLinkText,				historyLinkNum,				boatsLinkText,				boatsLinkNum,				sponsorsLinkText,				sponsorsLinkNum,				pradaLinkText,				pradaLinkNum,				sanFranLinkText,				sanFranLinkNum,				volvoLinkText,				volvoLinkNum,				resourcesLinkText,				resourcesLinkNum			];						navAltered = false;			navYDelta = 0;			currSecName = 'home';						/**			* Add each nav item comprised of three parts:			* 1. The visible shape that will tween			* 2. The text mc			*/						var section:Object;			var id:String;						var link:MovieClip;			var linkBg:MovieClip;			var linkText:MovieClip;			var linkNum:MovieClip;						var LinkClass:Class;						var xPos:int = 0;						for (var i:int = 0; i<Model.NAVIGATION.length; i++) {				id = Model.NAVIGATION[i];				section = Model.SECTIONS[id];								// link background				linkBg = new MovieClip();				linkBg.graphics.beginFill(section.color, 1);				linkBg.graphics.drawRect(0, 0, 118, 44);				linkBg.graphics.endFill();								// link button				link = new MovieClip();				link.addChild(linkBg);				link.name = id;				link.alpha = 0;				link.x = xPos;				link.rotation = 8;				link.mouseChildren = false;				skewer(link, -3.8, -3.8);				addChild(link);								// link text				LinkClass = getDefinitionByName(id + 'LinkText') as Class;				linkText = new LinkClass();				linkText.name = id + 'LinkTxt';				linkText.alpha = 0;				linkText.x = link.x + section.nav.textOffsetX;				linkText.y = link.y + section.nav.textOffsetY;				linkText.mouseChildren = false;				linkText.mouseEnabled = false;				linkText.visible = false;				addChild(linkText);								// link number				LinkClass = getDefinitionByName(id + 'LinkNum') as Class;				linkNum = new LinkClass();				linkNum.name = id + 'LinkNum';				linkNum.x = link.x + link.width - 46;				linkNum.y = link.y + 18;				linkNum.alpha = 0;				linkNum.mouseChildren = false;				linkNum.mouseEnabled = false;				addChild(linkNum);								link.buttonMode = true;				link.addEventListener(MouseEvent.ROLL_OVER, dropDown);				link.addEventListener(MouseEvent.ROLL_OUT, retract);				link.addEventListener(MouseEvent.MOUSE_DOWN, buttonClicked);								xPos += link.width - 3;			}		}				private function buttonClicked(e:MouseEvent):void		{			e.stopImmediatePropagation();						var id:String = e.target.name;						if (id != currSecName) {				var mainApp:appBase = (parent as appBase);								if (currSecName == 'home') {					var homePage:Sprite = mainApp.getChildByName('home') as Sprite;					TweenLite.to(homePage, 1, { alpha:0, onComplete:function():void {						(parent as appBase).removeChild(homePage);						loadSection(id);					}});										//Alter the nav					var thisY:int = this.y;					navYDelta = 20;					TweenLite.to(this, 1, { y:thisY - navYDelta });					navAltered = true;				} else {					var thePage:* = mainApp.mainContainer.getChildByName(currSecName) as Sprite;					my_dispatch = new customDispatcher('finished');					my_dispatch.addEventListener(my_dispatch.ACTION, function():void {						loadSection(id);						mainApp.mainContainer.removeChild(thePage);					});					thePage.flyout(my_dispatch);				}			}		}				//Private functions		// _x and _y are the skew in degrees		private function skewer(target:DisplayObject, _x:Number, _y:Number):void		{			var mtx:Matrix = new Matrix();			mtx.b = _y * Math.PI/180;			mtx.c = _x * Math.PI/180;			mtx.concat(target.transform.matrix);			target.transform.matrix = mtx;		}				private function dropDown(e:MouseEvent):void		{			var link:MovieClip = e.target as MovieClip;			var id:String = link.name;						var theText:MovieClip = getChildByName(id + 'LinkTxt') as MovieClip;			theText.visible = true;			TweenLite.to(theText, 0.5, { alpha:1, delay:0.3 });						var bg:MovieClip = link.getChildAt(0) as MovieClip;			var theHeight:int = (parent as appBase).theStage.stageHeight + 500;						setNavItemColor(id, Model.SECTIONS[id].color);			TweenLite.to(bg, 0.3, { height:theHeight, ease:Sine.easeIn, overwrite:1 });		}				private function retract(e:MouseEvent):void		{			var link:MovieClip = e.target as MovieClip;			var id:String = link.name;						var theText:MovieClip = getChildByName(id + 'LinkTxt') as MovieClip;			TweenLite.killTweensOf(theText);			theText.alpha = 0;			theText.visible = false;						var bg:MovieClip = link.getChildAt(0) as MovieClip;						TweenLite.to(bg, 0.5, {height:44, width:118, onComplete:function():void {				if (navAltered && id != currSecName) {					setNavItemColor(id, 0x788989);				}			}});		}				private function loadSection(sectionToLoad:String):void		{			var id:String;			var link:MovieClip;			var bg:MovieClip;						if (currSecName == 'home') {				for (var i:int = 0; i<Model.NAVIGATION.length; i++) {					id = Model.NAVIGATION[i];										setNavItemColor(id, 0x788989);				}			} else {				setNavItemColor(currSecName, 0x788989);			}						// next section nav bg			setNavItemColor(sectionToLoad, Model.SECTIONS[sectionToLoad].color);						//Instantiate new section			var mainApp:appBase = (parent as appBase);			var SectionClassName:String = Model.SECTIONS[sectionToLoad].className;						if (SectionClassName) {				var SectionClass:Class = getDefinitionByName('script.' + SectionClassName) as Class;				var section:Sprite = new SectionClass(mainApp);				section.name = sectionToLoad;				mainApp.mainContainer.addChild(section);				currSecName = sectionToLoad;			}		}				private function setNavItemColor(id:String, color:Number):void		{			var link:MovieClip = getChildByName(id) as MovieClip;			var bg:MovieClip = link.getChildAt(0) as MovieClip;			TweenLite.to(bg, 0, { tint:color });		}				public function shaBang():void		{			//Fade in all nav items			var link:MovieClip;			var linkNum:MovieClip;			var id:String;						for (var i:int = 0; i<Model.NAVIGATION.length; i++) {				id = Model.NAVIGATION[i];								link = getChildByName(id) as MovieClip;				linkNum = getChildByName(id + 'LinkNum') as MovieClip;								TweenLite.to([link, linkNum], 0.5, {alpha:1, ease:Sine.easeIn, delay:i * 0.1});			}		}	}}