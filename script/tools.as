package script{		import flash.display.*;	import flash.events.*;	import fl.transitions.*;	import fl.transitions.easing.*;	import flash.text.*;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLLoaderDataFormat;	import flash.errors.IOError;	import flash.system.LoaderContext;	import flash.external.ExternalInterface;//Used for javascript call	import flash.net.FileFilter;	import flash.net.FileReference;	import flash.utils.ByteArray;			public class tools{						private var loadedFile:ByteArray;		public var fileName:String;				/**		* Constructor		*/		public function tools():void{								}				/**		* Public static functions		*/				public static function getItemNumber(itemName:String):Number{			var pos:int = itemName.indexOf("_");			var objectNo:String = itemName.slice(0,pos);			var objectNum:Number = int(objectNo);			return objectNum;		}				public static function getNameBit(itemName:String):String{			var pos:int = itemName.indexOf("_profile");			var objectString:String = itemName.slice(0,pos);			//var objectNum:Number = int(objectNo);			return objectString;		}				/**		* Public functions		*/		public function loadFile(filePath:String):void{			trace('downloading?');			//var request:URLRequest = new URLRequest("http://dev.designedbyinsight.com/insightappcms/sites/default/files/documents/App-CMS.pdf");			var request:URLRequest = new URLRequest(filePath);			var urlLoader:URLLoader = new URLLoader(request);			urlLoader.addEventListener(Event.COMPLETE, onURLLoaderComplete);			urlLoader.dataFormat = URLLoaderDataFormat.BINARY;			urlLoader.load(request);		}		private function onURLLoaderComplete(event:Event):void{			trace('I want to save');			loadedFile = event.target.data;			saveLoadedFile();		}		private function saveLoadedFile():void{			trace('I might be saving...');			var file:FileReference = new FileReference();			file.save(loadedFile, fileName);			}			}	}